<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CASE MANAGMENT V2">
      <stringProp name="TestPlan.comments">UAT</stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">mlbb--uat.sandbox.my.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_VERSION" elementType="Argument">
            <stringProp name="Argument.name">API_VERSION</stringProp>
            <stringProp name="Argument.value">60.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="------------------------------------------------------------------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">------------------------------------------------------------------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL_INT" elementType="Argument">
            <stringProp name="Argument.name">URL_INT</stringProp>
            <stringProp name="Argument.value">mlbb-int--balinkdev1.sandbox.my.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL_UAT" elementType="Argument">
            <stringProp name="Argument.name">URL_UAT</stringProp>
            <stringProp name="Argument.value">mlbb--uat.sandbox.my.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL_CCDEV" elementType="Argument">
            <stringProp name="Argument.name">URL_CCDEV</stringProp>
            <stringProp name="Argument.value">mlbb--ccdev.sandbox.my.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="00 - PROFILS AUTHENTICATION">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN UAT">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1045209029">
                <stringProp name="-396450683">malik.rachi@chanel.com.uat</stringProp>
                <stringProp name="-1533914222">Johnwick22&amp;&amp;Pj0fVCkDlr0QBQNKXGkAV76t</stringProp>
                <stringProp name="-1350383374">3MVG9h1tlolNnV8P03yUhOVGzSNT1swuiwyqgtA60fZ7GH9OCORB.Dr9ASGw7gybx7yVsodBROu_yLMD3VHWi</stringProp>
                <stringProp name="-1160630686">FD66F6BDBD436C375C27AE5A31A86EE4A2FD00506937DE17B123D8954710F732</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN INT" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-876043754">
                <stringProp name="-564751560">malik.rachi@chanel.com.balinkdev1</stringProp>
                <stringProp name="550328609">Johnwick33&amp;&amp;FIeEbHRd9s0umlOkpPIFVYWl0</stringProp>
                <stringProp name="-1920816804">3MVG9rKhT8ocoxGkPdSEUBFzU_UsQng3yygohT6vW3vmszo9NS94Dl1Csl7Pjtp2hCI5xoAiQw8tYGoMkB91m</stringProp>
                <stringProp name="1388323536">22B39FB2F5DE7787A1E440A2F93555D9C4C6DC729F37D4B0328B80DFDB40175B</stringProp>
                <stringProp name="-251573259">mlbb-int--balinkdev1.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN CCDEV" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="913947308">
                <stringProp name="1246407058">malik.rachi@chanel.com.ccdev</stringProp>
                <stringProp name="609809824">Johnwick12&amp;</stringProp>
                <stringProp name="-1230091035">3MVG9qwDmLOyLzAN6lgRt6mvsHV3UKqzojISKkf5OnNhxZiNj25O4GTP6HX6q7cCPCc6zGUkfQZ15oW.mCZh1</stringProp>
                <stringProp name="-544287616">7FD33A2A3473A01EFC2FAC7270381B17BE35F1AB9B8F84629C68A5C427C6EBEA</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN LCE" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1238721955">
                <stringProp name="813968057">apim@chanel-mlbb.com.lce</stringProp>
                <stringProp name="205917576">3SA9WAhoQ</stringProp>
                <stringProp name="-487100760">3MVG9w8uXui2aB_ryu1Xo7JYO5VE5l_jwQMfxcDJoryxPlqZ6k9ZqgHLD2yuPNiRPB.WXbgZ0pHX8WBJn.ca2</stringProp>
                <stringProp name="-323490986">346408F49E5FEF429F562B5CCB7A20ADE3AE3399360452ECD9EB09D1B775DC56</stringProp>
                <stringProp name="2103573966">mlbb--lce.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN AGENT" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1674047287">
                <stringProp name="327987699">usain.bolt.uat22@yopmail.com.uat</stringProp>
                <stringProp name="-252401143">AgentTest2024!Bnkp1bYVD3vgW5oXn3MKoNsj</stringProp>
                <stringProp name="98729447">3MVG9lcxCTdG2VbtWAnBLcHTY.yOfhRZ57p1kEW5eoXIU_BeJBN2m8pwOpu_MzmfU0MVdWDV.EJc12LHKwsju</stringProp>
                <stringProp name="1365633136">26B83E7300CFB00C809A2A6B3F041EC0788AC7EE2642E3656C3B117201F15116</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN SUPERVISEUR" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="976959729">
                <stringProp name="-231698668">laure.manaudou.test@gmail.com.uat</stringProp>
                <stringProp name="323340225">SuperviseurTest2024!RwD5LWQ34XAMfP3f5F7QI3RQ7</stringProp>
                <stringProp name="98729447">3MVG9lcxCTdG2VbtWAnBLcHTY.yOfhRZ57p1kEW5eoXIU_BeJBN2m8pwOpu_MzmfU0MVdWDV.EJc12LHKwsju</stringProp>
                <stringProp name="1365633136">26B83E7300CFB00C809A2A6B3F041EC0788AC7EE2642E3656C3B117201F15116</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN MANAGER" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="329974315">
                <stringProp name="1794887676">pierrerene389@gmail.com.uat</stringProp>
                <stringProp name="1260060079">PierreTest2022!Qyp6dpHavRLSIvIU8XHUPBHER</stringProp>
                <stringProp name="-1350383374">3MVG9h1tlolNnV8P03yUhOVGzSNT1swuiwyqgtA60fZ7GH9OCORB.Dr9ASGw7gybx7yVsodBROu_yLMD3VHWi</stringProp>
                <stringProp name="-1160630686">FD66F6BDBD436C375C27AE5A31A86EE4A2FD00506937DE17B123D8954710F732</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="01 - CASES TYPES CREATION" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0101 - CCC_CM - CASE CREATION : GENERIC CASE CREATION">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Spain&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Generic Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;ContactId&quot;: &quot;0036M00004RiCsTQAV&quot;,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;en_US&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Email&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: &quot;Subject ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: &quot;&quot;,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idRequest</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0102 - CCC_CM - CASE CREATION : COSMETO CASE CREATION">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: &quot;Gabrielle CHANEL&quot;,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: null,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Austria&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sujets sensibles&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Réaction Indésirable Evereport&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: &quot;Fragrances&quot;,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Email&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Costmeto Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;0036M00004RiCsTQAV&quot;,&#xd;
            &quot;ContentEnablonEmails__c&quot;: null,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;en_US&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: null,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjnQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;SourceId&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: &quot;Subject ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0103 - CCC_CM - CASE CREATION : ECOMMERCE CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Livraison ecom&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: &quot;&quot;,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Advisor Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;ContactId&quot;: &quot;0036M00004RiCsTQAV&quot;,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;en_US&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Web&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjoQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: &quot;Subject ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0104 - CCC_CM - CASE CREATION : F&amp;B AFTER SALES CASE  CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> { &#xd;
 		  &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: &quot;Complexion&quot;,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: null,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Austria&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sav&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Esthétique&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: &quot;Makeup&quot;,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Do not know&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;F&amp;B Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: null,&#xd;
            &quot;ContentEnablonEmails__c&quot;: null,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: null,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: null,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjpQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;SourceId&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: &quot;F&amp;B Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: null,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
  }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idRequest</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0105 - CCC_CM - CASE CREATION : FASHION EYEWEAR WJF AFTERSALES CASE  CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: &quot;Allure&quot;,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: null,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sav&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Informations SAV et conseils&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: &quot;Fragrances&quot;,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Email&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Fashion Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: null,&#xd;
            &quot;ContentEnablonEmails__c&quot;: null,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: null,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjnQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: &quot;Fashion Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: &quot;TEST&quot;,&#xd;
            &quot;WebLastName__c&quot;: &quot;AUTO&quot;,&#xd;
            &quot;WebLocation__c&quot;: &quot;France&quot;,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: &quot;Mr.&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0106 - CCC_CM - CASE CREATION : INVOICE DUPLICATE CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: &quot;Allure&quot;,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: null,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Facture - Duplicata&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: &quot;Fragrances&quot;,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Email&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Invoice Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: null,&#xd;
            &quot;ContentEnablonEmails__c&quot;: null,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: null,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjnQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: &quot;Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: &quot;TEST&quot;,&#xd;
            &quot;WebLastName__c&quot;: &quot;AUTO&quot;,&#xd;
            &quot;WebLocation__c&quot;: &quot;France&quot;,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: &quot;Mr.&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0107 - CCC_CM - CASE CREATION : LDB CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;AB - Benelux - Amsterdam&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;LDB Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;ContactId&quot;: &quot;0036M00004RiCsTQAV&quot;,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: null,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Email&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000SA04QAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: &quot;Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0108 - CCC_CM - CASE CREATION : WEBFORM" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/apexrest/WebToCase</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;lastName&quot;: &quot;LastName : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
  &quot;city&quot;: &quot;Paris&quot;,&#xd;
  &quot;areaOfInterest&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
  &quot;origin&quot;: &quot;Web&quot;,&#xd;
  &quot;title&quot;: &quot;Mr.&quot;,&#xd;
  &quot;locale&quot;: &quot;ar_EN&quot;,&#xd;
  &quot;zipcode&quot;: &quot;75008&quot;,&#xd;
  &quot;phone&quot;: &quot;+331${__Random(10000000,99999999,)}&quot;,&#xd;
  &quot;marketingConsent&quot;: true,&#xd;
  &quot;topic&quot;: &quot;Information on a product&quot;,&#xd;
  &quot;location&quot;: &quot;KW&quot;,&#xd;
  &quot;postCode&quot;: &quot;75008&quot;,&#xd;
  &quot;countryIndicator&quot;: &quot;null&quot;,&#xd;
  &quot;email&quot;: &quot;housni.issulahabdoulhamid@chanel.com&quot;,&#xd;
  &quot;dataUsageConsent&quot;: true,&#xd;
  &quot;status&quot;: &quot;SUCCESS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0109 - CCC_CM - CASE CREATION : WEBFORM" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/apexrest/WebToCase</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;lastName&quot;: &quot;${LAST_NAME}&quot;,&#xd;
  &quot;city&quot;: &quot;Paris&quot;,&#xd;
  &quot;areaOfInterest&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
  &quot;origin&quot;: &quot;Web&quot;,&#xd;
  &quot;message&quot;: &quot;Jmeter Automation - Webfrom ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
  &quot;title&quot;: &quot;Mr.&quot;,&#xd;
  &quot;locale&quot;: &quot; fr_FR&quot;,&#xd;
  &quot;zipcode&quot;: &quot;75008&quot;,&#xd;
  &quot;firstName&quot;: &quot;FirstName : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
  &quot;phone&quot;: &quot;+331${__Random(10000000,99999999,)}&quot;,&#xd;
  &quot;marketingConsent&quot;: true,&#xd;
  &quot;topic&quot;: &quot;Information on a product&quot;,&#xd;
  &quot;location&quot;: &quot;FR&quot;,&#xd;
  &quot;postCode&quot;: &quot;75008&quot;,&#xd;
  &quot;countryIndicator&quot;: &quot;null&quot;,&#xd;
  &quot;email&quot;: &quot;JmeterAutomation${__Random(10000000,99999999,)}@chanel.com&quot;,&#xd;
  &quot;dataUsageConsent&quot;: true,&#xd;
  &quot;status&quot;: &quot;SUCCESS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0110 - CCC_CM - CASE CREATION : EMAIL TO CASE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;FromAddress&quot;: &quot;housni.issulahabdoulhamid@chanel.com&quot;,      &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
            &quot;ToAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0111 - CCC_CM - CASE CREATION : EMAIL TO CASE">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;FromAddress&quot;: &quot;housni.issulahabdoulhamid@chanel.com&quot;,      &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
            &quot;ToAddress&quot;: &quot;testccdev01@gmail.com&quot;,&#xd;
            &quot;TextBody&quot; : &quot;Creation Case : Email to Case&quot;,&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0112 - CCC_CM - CCC SEND EMAIL TO CLIENT" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;malik.rachi+1@gmail.com&quot;,&#xd;
     &#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;housni.issulahabdoulhamid@chanel.com&quot;,&#xd;
&#xd;
                        &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\nCLOSED TO REOPON &lt;br /&gt;\n&lt;br /&gt;\nCordialement,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;customercare.me@chanel-corp.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : false&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0112 - CCC_CM - CASE CREATION : GENERIC CASE CREATION to be created as Priority 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Spain&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sujets sensibles&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Composition&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: &quot;Matières végétales&quot;,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Generic Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;ContactId&quot;: &quot;0036M00004RiCsTQAV&quot;,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;en_US&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Email&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: null,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: &quot;Subject ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: &quot;&quot;,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idRequest</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="02 - COSMETO CASE MANAGEMENT" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0200 - CCC_CM - COSMETO CASE : ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;+3315537${__Random(1000,9999,)}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0201 - CCC_CM - COSMETO CASE : GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT OwnerId, PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OwnerId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">OwnerId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;OwnerId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0202 - CCC_CM - COSMETO CASE : CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: &quot;Gabrielle CHANEL&quot;,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: null,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Austria&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sujets sensibles&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Réaction Indésirable Evereport&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: &quot;Fragrances&quot;,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Email&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Costmeto Automation : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;ContentEnablonEmails__c&quot;: null,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: &quot;Description ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;en_US&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: null,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjnQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;SourceId&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: &quot;Subject ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0203 - CCC_CM - COSMETO CASE : CASE STATUS = OPEN ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Open</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0204 - CCC_CM - COSMETO CASE : GET CASE NUMBER" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT CaseNumber FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CaseNumber" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">CaseNumber</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;CaseNumber\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0205 - CCC_CM - COSMETO CASE : ADD CASE PRODUCT 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/CaseProduct__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;AnswerrequiredbyclientCaseProduct__c&quot;: &quot;No&quot;,&#xd;
            &quot;Case__c&quot;: &quot;${idCase}&quot;,&#xd;
            &quot;Clientaccepttoreturnproducts__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;DateOfFirstIssue__c&quot;: null,&#xd;
            &quot;DateOfFirstUse__c&quot;: null,&#xd;
            &quot;Location__c&quot;: null,&#xd;
            &quot;Photos__c&quot;: false,&#xd;
            &quot;PointOfSale__c&quot;: null,&#xd;
            &quot;ProductBatchCode__c&quot;: &quot;3369&quot;,&#xd;
            &quot;ProductDateOfPurchase__c&quot;: null,&#xd;
            &quot;ProductManufacturingDate__c&quot;: null,&#xd;
            &quot;ProductNameEN__c&quot;: &quot;PRODUCT 5&quot;,&#xd;
            &quot;ProductName__c&quot;: &quot;PRODUCT 5&quot;,&#xd;
            &quot;ProductProofOfPurchase__c&quot;: false,&#xd;
            &quot;ProductReceptionDate__c&quot;: null,&#xd;
            &quot;ProductUsage__c&quot;: null,&#xd;
            &quot;Product_Reference__c&quot;: &quot;H9658S&quot;,&#xd;
            &quot;Product__c&quot;: &quot;a0H6M00000ZrKvmUAF&quot;,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: &quot;This is the result of analysis&quot;     &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0206 - CCC_CM - COSMETO CASE : ADD CASE PRODUCT 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/CaseProduct__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;AnswerrequiredbyclientCaseProduct__c&quot;: &quot;No&quot;,&#xd;
            &quot;Case__c&quot;: &quot;${idCase}&quot;,&#xd;
            &quot;Clientaccepttoreturnproducts__c&quot;: &quot;No&quot;,&#xd;
            &quot;DateOfFirstIssue__c&quot;: null,&#xd;
            &quot;DateOfFirstUse__c&quot;: null,&#xd;
            &quot;Location__c&quot;: null,&#xd;
            &quot;Photos__c&quot;: false,&#xd;
            &quot;PointOfSale__c&quot;: null,&#xd;
            &quot;ProductBatchCode__c&quot;: &quot;2269&quot;,&#xd;
            &quot;ProductDateOfPurchase__c&quot;: null,&#xd;
            &quot;ProductManufacturingDate__c&quot;: null,&#xd;
            &quot;ProductNameEN__c&quot;: &quot;Or blanc et diamant&quot;,&#xd;
            &quot;ProductName__c&quot;: &quot;Or blanc et diamant&quot;,&#xd;
            &quot;ProductProofOfPurchase__c&quot;: false,&#xd;
            &quot;ProductReceptionDate__c&quot;: null,&#xd;
            &quot;ProductUsage__c&quot;: null,&#xd;
            &quot;Product_Reference__c&quot;: &quot;H9658S&quot;,&#xd;
            &quot;Product__c&quot;: &quot;a0H6M00000ZrKvmUAF&quot;,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: &quot;This is the result of analysis&quot;     &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0207 - CCC_CM - COSMETO CASE : SEND REQUEST TO EVEDRUG" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/tooling/executeAnonymous/?</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="anonymousBody" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">CCC_EvedrugController.sendRequestToEvedrug(&apos;${idCase}&apos;);</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">anonymousBody</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0208 - CCC_CM - COSMETO CASE : GET ID SURVEY" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT IDequestionnaireEvereport__c, CaseNumber FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GET ID SURVEY" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idSurvey</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;IDequestionnaireEvereport__c\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GET CaseNumber" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">CaseNumber</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;CaseNumber\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ID SURVEY IS NULL ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].IDequestionnaireEvereport__c</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0209 - CCC_CM - COSMETO CASE : RETURN RECEIPT 1 - UPDATE CASE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;CVquestionnairecompletionstatus__c&quot;: &quot;Completed&quot;,&#xd;
  &quot;DateClientSentBackCVQuestionnaire__c&quot;: &quot;${__time(yyyy-MM-dd)}&quot;,&#xd;
  &quot;Status&quot;: &quot;CC Pending&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="84303">URL</stringProp>
              <stringProp name="953725811">API_VERSION</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1062030428">
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
                <stringProp name="1632291">56.0</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0210 - CCC_CM - COSMETO CASE : RETURN RECEIPT 2 - CREATE LOG RECORD" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Log__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Type__c&quot;: &quot;CCC&quot;,&#xd;
  &quot;JobName__c&quot;: &quot;Evedrug - Method returnReceipt&quot;,&#xd;
  &quot;RunDate__c&quot;: &quot;${__time(yyyy-MM-dd)}&quot;,&#xd;
  &quot;Status__c&quot;: &quot;Success&quot;,&#xd;
  &quot;SuccessMessage__c&quot;: &quot;&quot;,&#xd;
  &quot;ErrorMessage__c&quot;: &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="84303">URL</stringProp>
              <stringProp name="953725811">API_VERSION</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1062030428">
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
                <stringProp name="1632291">56.0</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0211 - CCC_CM - COSMETO CASE : CASE STATUS = CC PENDING ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">CC Pending</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0212 - CCC_CM - COSMETO CASE : PRODUCT RETURN RECEIPT 1 - UPDATE CASE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: true,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}//query?q=SELECT+Id,+Case__c,+Name,+ProductName__c,+Product__c,+ProductReceptionDate__c+FROM+CaseProduct__c+WHERE+CaseNumber__c=&apos;${idCase}&apos;+AND+ProductName__c=&apos;Or blanc et diamant&apos;&quot;,&#xd;
            &quot;referenceId&quot;: &quot;GetCaseProducts&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}//sobjects/CaseProduct__c/@{GetCaseProducts.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot;: &quot;UpdateCaseProduct&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;ProductReceptionDate__c&quot;: &quot;${__time(yyyy-MM-dd)}T12:00:00Z&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}//sobjects/Case/CaseNumber/${CaseNumber}?updateOnly=true&quot;,&#xd;
            &quot;referenceId&quot;: &quot;UpdateCase&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Status&quot;: &quot;CC Pending&quot;,&#xd;
                &quot;CommentProduct__c&quot;: &quot;Your comments here&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="84303">URL</stringProp>
              <stringProp name="953725811">API_VERSION</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1062030428">
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
                <stringProp name="1632291">56.0</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0213 - CCC_CM - COSMETO CASE : PRODUCT RETURN RECEIPT 2 - CREATE LOG RECORD" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Log__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Type__c&quot;: &quot;CCC&quot;,&#xd;
  &quot;JobName__c&quot;: &quot;Evedrug - Method returnReceipt&quot;,&#xd;
  &quot;RunDate__c&quot;: &quot;${__time(yyyy-MM-dd)}&quot;,&#xd;
  &quot;Status__c&quot;: &quot;Success&quot;,&#xd;
  &quot;SuccessMessage__c&quot;: &quot;&quot;,&#xd;
  &quot;ErrorMessage__c&quot;: &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="84303">URL</stringProp>
              <stringProp name="953725811">API_VERSION</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1062030428">
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
                <stringProp name="1632291">56.0</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0214 - CCC_CM - COSMETO CASE : PUT DATE CV QUESTIONNAIRE = TODAY " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;DateCVQuestionnaireSentToClient__c&quot; : &quot;${__time(yyyy-MM-dd)}T14:15.000+0000&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0215 - CCC_CM - COSMETO CASE : QUESTIONNAIRE = COMPLETED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT CVquestionnairecompletionstatus__c FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].CVquestionnairecompletionstatus__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Completed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0216 - CCC_CM - COSMETO CASE : ADD REMPLACEMENT PRODUCT STATUS = ORDERED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/ReplacementProduct__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
      	  &quot;Case__c&quot;: &quot;${idCase}&quot;,&#xd;
            &quot;Name&quot;: &quot;ROSY BEIGE 15G - EXCLU.CREA/LTD EDIT.FACE&quot;,&#xd;
            &quot;ProductStatus__c&quot;: &quot;Ordered&quot;,&#xd;
            &quot;Product_Reference__c&quot;: &quot;185518&quot;,&#xd;
            &quot;Product__c&quot;: &quot;a0H6M00000ZrKvhUAF&quot;,&#xd;
            &quot;RP_Created_Date__c&quot;: &quot;${__time(yyyy-MM-dd)}&quot;,&#xd;
            &quot;Shippingdate__c&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idRemplacementProduct</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0217 - CCC_CM - COSMETO CASE : CASE STATUS = PRODUCT ORDERED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Product ordered</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0218 - CCC_CM - COSMETO CASE : REMPLACEMENT PRODUCT - PRODUCT STATUS = RECEIVED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/ReplacementProduct__c/${idRemplacementProduct}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	  &quot;ProductStatus__c&quot;: &quot;Received&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0219 - CCC_CM - COSMETO CASE : CASE STATUS = CC PENDING ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">CC Pending</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0220 - CCC_CM - COSMETO CASE : GET CASE NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT CaseNumber FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="03 - ENABLON CASE MANAGEMENT" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0301 - CCC_CASE MANAGMENT : ENABLON - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;Enablon : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;Enablon : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;+3315537${__Random(1000,9999,)}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0301 - CCC_CASE MANAGMENT : ENABLON - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT OwnerId, PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OwnerId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">OwnerId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;OwnerId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0300 - CCC_CASE MANAGMENT : ENABLON - CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&#xd;
		  &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Belgium&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sav&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Réglementaire&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Do not know&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;Enablon &quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;ContentEnablonEmails__c&quot;: null,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjpQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;SourceId&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: null,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
         &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0301 - CCC_CASE MANAGMENT : ENABLON - STATUS = OPEN ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Open</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0302 - CCC_CASE MANAGMENT : ENABLON - ADD CASE PRODUCT" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/CaseProduct__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
            &quot;AnswerrequiredbyclientCaseProduct__c&quot;: &quot;No&quot;,&#xd;
            &quot;Case__c&quot;: &quot;${idCase}&quot;,&#xd;
            &quot;Clientaccepttoreturnproducts__c&quot;: &quot;Do not know&quot;,&#xd;
            &quot;DateOfFirstIssue__c&quot;: null,&#xd;
            &quot;DateOfFirstUse__c&quot;: null,&#xd;
            &quot;Location__c&quot;: &quot;content / formula&quot;,&#xd;
            &quot;Photos__c&quot;: false,&#xd;
            &quot;PointOfSale__c&quot;: null,&#xd;
            &quot;ProductBatchCode__c&quot;: &quot;5554&quot;,&#xd;
            &quot;ProductDateOfPurchase__c&quot;: null,&#xd;
            &quot;ProductManufacturingDate__c&quot;: null,&#xd;
            &quot;ProductNameEN__c&quot;: &quot;18k white gold, diamonds&quot;,&#xd;
            &quot;ProductName__c&quot;: &quot;Or blanc 18 carats, diamants&quot;,&#xd;
            &quot;ProductProofOfPurchase__c&quot;: false,&#xd;
            &quot;ProductReceptionDate__c&quot;: null,&#xd;
            &quot;ProductUsage__c&quot;: null,&#xd;
            &quot;Product_Reference__c&quot;: &quot;008143&quot;,&#xd;
            &quot;Product__c&quot;: &quot;a0H6M00000ZrMaAUAV&quot;,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCaseProduct</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0303 - CCC_CASE MANAGMENT : ENABLON - SEND REQUEST TO ENABLON" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/tooling/executeAnonymous/?</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="anonymousBody" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Enablon.SendRequestEnablon(&apos;${idCase}&apos;);</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">anonymousBody</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0304 - CCC_CASE MANAGMENT : ENABLON - GET STATUS LOGS = SUCCES" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status__c FROM Log__c Where Case__c =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status logs" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records.[0].Status__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Success</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0307 - CCC_CASE MANAGMENT : ENABLON - GET CASE NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT CaseNumber FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="04 - GENERIC CASE MANAGEMENT" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0400 - CCC_CASE MANAGMENT : GENERIC CASE - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;+3315537${__Random(1000,9999,)}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0401 - CCC_CASE MANAGMENT : GENERIC CASE - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT OwnerId, PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OwnerId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">OwnerId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;OwnerId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0402 - CCC_CASE MANAGMENT : GENERIC CASE - CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
            &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - Portugal&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: &quot;Status Case Management Automation :${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
		  &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: null,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
		  &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: &quot;Status Case Management Automation :${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0403 - CCC_CASE MANAGMENT : GENERIC CASE - CASE STATUS = NEW ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="RESQUEST STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">New</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0404 - CCC_CASE MANAGMENT : GENERIC CASE - CCC SEND EMAIL TO CLIENT">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${idCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;Test@gmail.com&quot;,&#xd;
&#xd;
                        &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE CLIENT SENT EMAIL &lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : false&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">30000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0405 - CCC_CASE MANAGMENT : GENERIC CASE - PUT CASE STATUS = CUSTOMER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Customer&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0406 - CCC_CASE MANAGMENT : GENERIC CASE - CASE STATUS = CUSTOMER ?">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Case STATUS ?">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Customer</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0407 - CCC_CASE MANAGMENT : GENERIC CASE - CLIENT SENT EMAIL TO CCC" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;Test@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${idCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
            &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE AGENT RECEIVE EMAIL&lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;customercare.me@chanel-corp.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0408 - CCC_CASE MANAGMENT : GENERIC CASE - CASE STATUS = CC PENDING ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="RESQUEST STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">CC Pending</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0409 - CCC_CASE MANAGMENT : GENERIC CASE - PUT CASE STATUS = CLOSED  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0410 - CCC_CASE MANAGMENT : GENERIC CASE - CASE STATUS = CLOSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Closed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0411 - CCC_CASE MANAGMENT : GENERIC CASE - CLIENT SEND EMAIL TO CCC" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;Test@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${idCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
                        &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE CLIENT SENT EMAIL &lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0412 - CCC_CASE MANAGMENT : GENERIC CASE - CASE STATUS = REOPEN ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Reopen</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0413 - CCC_CASE MANAGMENT : GENERIC CASE - GET CASE NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT CaseNumber FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="05 - WEBFORM CASE MANAGEMENT" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0500 - CCC_CASE MANAGMENT : WEBFORM - CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/apexrest/WebToCase</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;lastName&quot;: &quot;${LAST_NAME}&quot;,&#xd;
  &quot;city&quot;: &quot;Paris&quot;,&#xd;
  &quot;areaOfInterest&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
  &quot;origin&quot;: &quot;Web&quot;,&#xd;
  &quot;message&quot;: &quot;Case Automation - Webfrom&quot;,&#xd;
  &quot;title&quot;: &quot;Mr.&quot;,&#xd;
  &quot;locale&quot;: &quot; fr_FR&quot;,&#xd;
  &quot;zipcode&quot;: &quot;75008&quot;,&#xd;
  &quot;firstName&quot;: &quot;Malik&quot;,&#xd;
  &quot;phone&quot;: &quot;+33142022644&quot;,&#xd;
  &quot;marketingConsent&quot;: true,&#xd;
  &quot;topic&quot;: &quot;Information on a product&quot;,&#xd;
  &quot;location&quot;: &quot;FR&quot;,&#xd;
  &quot;postCode&quot;: &quot;75008&quot;,&#xd;
  &quot;countryIndicator&quot;: &quot;null&quot;,&#xd;
  &quot;email&quot;: &quot;test@chanel.com&quot;,&#xd;
  &quot;dataUsageConsent&quot;: true,&#xd;
  &quot;status&quot;: &quot;SUCCESS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0501 - CCC_CASE MANAGMENT : WEBFORM - GET CASE NUMBER" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, CaseNumber FROM Case Where WebLastName__c =&apos;${LAST_NAME}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idCase" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">IdCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CaseNumber" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">CaseNumber</stringProp>
            <stringProp name="RegexExtractor.regex">$.compositeResponse[0].body.records.[0].CaseNumber</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0502 - CCC_CASE MANAGMENT : WEBFORM - CCC SEND EMAIL TO CLIENT">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${IdCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;Test@gmail.com&quot;,&#xd;
&#xd;
                        &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE CLIENT SENT EMAIL &lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : false&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0503 - CCC_CASE MANAGMENT : WEBFORM - PUT CUSTOMER STATUS">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${IdCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Customer&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0504 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = CUSTOMER ?">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Case STATUS ?">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Customer</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0505 - CCC_CASE MANAGMENT : WEBFORM - CLIENT SENT EMAIL TO CCC">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;Test@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${IdCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
            &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE AGENT RECEIVE EMAIL&lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;customercare.me@chanel-corp.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0506 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = CC PENDING ?">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">6000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="RESQUEST STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">CC Pending</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0507 - CCC_CASE MANAGMENT : WEBFORM - PUT CASE STATUS = CLOSED  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${IdCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0508 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = CLOSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Closed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0509 - CCC_CASE MANAGMENT : WEBFORM - CLIENT SENT EMAIL TO CCC" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;malik.rachi+1@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${IdCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;uatccctest@gmail.com&quot;,&#xd;
&#xd;
            &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE AGENT RECEIVE EMAIL&lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;customercare.me@chanel-corp.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0510 - CCC_CASE MANAGMENT : WEBFORM - PUT CUSTOMER STATUS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${IdCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Customer&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0511 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = CUSTOMER ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Case STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Customer</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0512 - CCC_CASE MANAGMENT : WEBFORM - CCC RECEIVE EMAIL" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;malik.rachi+1@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${IdCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;malik.rachi+1@gmail.com&quot;,&#xd;
&#xd;
            &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE AGENT RECEIVE EMAIL&lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;customercare.me@chanel-corp.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0513 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = CC PENDING ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="RESQUEST STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">CC Pending</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0514 - CCC_CASE MANAGMENT : WEBFORM - PUT CASE STATUS = CLOSED  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${IdCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0515 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = CLOSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Closed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0516 - CCC_CASE MANAGMENT : WEBFORM - CCC RECEIVE EMAIL" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/EmailMessage</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;BccAddress&quot;: &quot;malik.rachi+1@gmail.com&quot;,&#xd;
     &#xd;
            &quot;ParentId&quot;: &quot;${IdCase}&quot;,&#xd;
            &#xd;
            &quot;Subject&quot;: &quot;Test&quot;,&#xd;
           &#xd;
            &quot;ToAddress&quot;: &quot;malik.rachi+1@gmail.com&quot;,&#xd;
&#xd;
                        &quot;HtmlBody&quot;:  &quot;&lt;html&gt;\n&lt;head&gt;\n\t&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\&quot;height: auto; min-height: auto;\&quot;&gt;Bonjour,&lt;br /&gt;\n&lt;br /&gt;\n WEBFORM AUTOMATION EMAIL : THE AGENT RECEIVE EMAIL &lt;br /&gt;\n&lt;br /&gt;\nRegards,&lt;/body&gt;\n&lt;/html&gt;\n&quot;,&#xd;
            &#xd;
            &quot;ValidatedFromAddress&quot;:&quot;customercare.me@chanel-corp.com&quot;,&#xd;
&#xd;
            &quot;Incoming&quot; : true&#xd;
         &#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0517 - CCC_CASE MANAGMENT : WEBFORM - CASE STATUS = REOPEN ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status FROM Case Where Id =&apos;${IdCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE STATUS ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Reopen</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0518 - CCC_CASE MANAGMENT : WEBFORM - GET CASE NUMBER">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT CaseNumber FROM Case Where WebLastName__c =&apos;${LAST_NAME}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">CaseNumber</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;CaseNumber\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="06 - CASE PRIORITY 1 : VOICE CALL VS NO OPENED CASE " enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0600 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 1 - ACCOUNT CREATION">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: true,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0601 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 1 - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0602 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 1 - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975187408&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;Contact__c&quot;: &quot;${PersonContactId}&quot;,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0603 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 1 - VOICE CALL ATTACHED = NEW CASE ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE 2  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0604 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 1 - GET CASE NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT CaseNumber FROM Case Where AccountId =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0605 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 1 - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT Id FROM VoiceCall Where  Contact__c =&apos;${PersonContactId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="07 - CASE PRIORITY 2 : VOICE CALL VS 2 OPENED CASES" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0700 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0701 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0702 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - GENERIC CASE 1 - CREATION " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Status&quot;: &quot;Open&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase1</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0703 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - GENERIC CASE 2 - CREATION " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0704 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975187408&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;Contact__c&quot;: &quot;${PersonContactId}&quot;,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0705 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - VOICE CALL ATTACHED = NULL ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE 2  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0706 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 2 - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT Id FROM VoiceCall Where  Contact__c =&apos;${PersonContactId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="08 - CASE PRIORITY 3 : VOICE CALL VS 1 CASE OPEN - 1 CASE CLOSED" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0800 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0801 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - ACCOUNT - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0802 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - GENERIC CASE CREATION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Status&quot;: &quot;Open&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase1</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0803 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - GENERIC CASE CREATION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0804 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - PUT GENERIC CASE 2 = CLOSED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase2}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0805 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975187408&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;Contact__c&quot;: &quot;${PersonContactId}&quot;,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">4000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0806 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - VOICE CALL ATTACHED TO GENERIC CASE 1 ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE 1  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">${idCase1}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0807 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 3 - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT Id FROM VoiceCall Where  Contact__c =&apos;${PersonContactId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="09 - CASE PRIORITY 4 : VOICE CALL VS 1 OPENED CASE -  2 CLOSED CASES" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0900 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0901 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0902 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - GENERIC CASE CREATION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Status&quot;: &quot;Open&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase1</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0903 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - GENERIC CASE CREATION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0904 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - GENERIC CASE CREATION 3" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase3</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0905 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - PUT GENERIC CASE 2 = CLOSED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase2}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0906 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - PUT GENERIC CASE 3 = CLOSED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase3}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0907 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975187408&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;Contact__c&quot;: &quot;${PersonContactId}&quot;,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0908 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - VOICE CALL ATTACHED = CASE 1 ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE 1  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">${idCase1}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0909 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 4 - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT Id FROM VoiceCall Where  Contact__c =&apos;${PersonContactId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 - CASE PRIORITY 5 : VOICE CALL VS 2 CLOSED CASES " enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1000 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1001 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1002 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GENERIC CASE CREATION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Status&quot;: &quot;Open&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase1</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1003 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GENERIC CASE CREATION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1004 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - PUT GENERIC CASE 1 = CLOSED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase1}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1005 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - PUT GENERIC CASE 2 = CLOSED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase2}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1006 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975187408&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;Contact__c&quot;: &quot;${PersonContactId}&quot;,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1007 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - VOICE CALL ATTACHED = NEW CASE ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE 2  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1008 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT Id FROM VoiceCall Where  Contact__c =&apos;${PersonContactId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1009 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GET NEW CASE NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT CaseNumber FROM Case Where AccountId =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="11 - CASE PRIORITY 6 : VOICE CALL VS 2 OPENED CASES  -  1 CLOSED CASE " enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1100 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - ACCOUNT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1101 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1102 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GENERIC CASE CREATION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: null,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Division__c&quot;: &quot;Fashion &amp; Eyewear&quot;,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Status&quot;: &quot;Open&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase1</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1103 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GENERIC CASE CREATION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1104 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GENERIC CASE CREATION 3" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Boutiques - Réseau de distribution&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: null,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Watches Fine Jewellery&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjrQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;Transfert_Boutique__c&quot;: null,&#xd;
            &quot;Transfert_Equipe__c&quot;: null,&#xd;
            &quot;Transfert_Pays__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase3</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1105 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - PUT GENERIC CASE 2 = CLOSED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase3}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		  &quot;Status&quot;: &quot;Closed&quot;&#xd;
           &#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idClient</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1106 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975187408&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;Contact__c&quot;: &quot;${PersonContactId}&quot;,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1107 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - VOICE CALL ATTACHED = NULL ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE 1  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1108 - CCC_CASE MANAGMENT : VC - CASE PRIORITY 5 - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT Id FROM VoiceCall Where  Contact__c =&apos;${PersonContactId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="14 - CASE PRIORITY 7 : VOICE CALL VS WITHOUT ACCOUNT" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-557567383">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
              <stringProp name="383366909">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1401 - CASE PRIORITY 7 : VOICE CALL VS WITHOUT ACCOUNT - VOICE CALL CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/VoiceCall</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;OwnerId&quot;: &quot;0052X00000AFQczQAH&quot;,&#xd;
  &quot;FromPhoneNumber&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
  &quot;ToPhoneNumber&quot;: &quot;+33975181711&quot;,&#xd;
  &quot;CallDurationInSeconds&quot;: 3335,&#xd;
  &quot;VendorCallKey&quot;: &quot;80099ec7-a514-4c70-a69e-e8a3d3671aca&quot;,&#xd;
  &quot;CallStartDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;,&#xd;
  &quot;CallEndDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:06:21.000+0000&quot;,&#xd;
  &quot;CallDisposition&quot;: &quot;completed&quot;,&#xd;
  &quot;CallType&quot;: &quot;Inbound&quot;,&#xd;
  &quot;VendorType&quot;: &quot;ContactCenter&quot;,&#xd;
  &quot;IsRecorded&quot;: false,&#xd;
  &quot;CallerId&quot;: &quot;0ecG5000001rOtIIAU&quot;,&#xd;
  &quot;RecipientId&quot;: &quot;0ecG5000001rOtHIAU&quot;,&#xd;
  &quot;CallCenterId&quot;: &quot;04vbd0000000MN7AAM&quot;,&#xd;
  &quot;ConversationId&quot;: &quot;0dwG5000001NfzZIAS&quot;,&#xd;
  &quot;CustomerHoldDuration&quot;: 0,&#xd;
  &quot;NumberOfHolds&quot;: 0,&#xd;
  &quot;Clientdoesnotwanttoberecorded__c&quot;: false,&#xd;
  &quot;CreatedByLambda__c&quot;: true,&#xd;
  &quot;CallAcceptDateTime&quot;: &quot;${__time(yyyy-MM-dd)}T17:02:46.000+0000&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idVoiceCall" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idVoiceCall</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1402 - CASE PRIORITY 7 : VOICE CALL VS WITHOUT ACCOUNT - VOICE CALL ATTACHED = NEW CASE ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT RelatedRecordId FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED GENERIC CASE  ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].RelatedRecordId</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1405 - CASE PRIORITY 7 : VOICE CALL VS WITHOUT ACCOUNT - GET CASE NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT CaseNumber FROM Case Where Voice_Call__c =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="VOICE CALL ATTACHED CASE NUMBER" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].CaseNumber</stringProp>
            <stringProp name="EXPECTED_VALUE">null</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1403 - CASE PRIORITY 7 : VOICE CALL VS WITHOUT ACCOUNT - GET VOICE CALL NUMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT name FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1404 - CASE PRIORITY 7 : VOICE CALL VS WITHOUT ACCOUNT - CASELINE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT CaseLine__c FROM VoiceCall Where Id =&apos;${idVoiceCall}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASELINE BTQ LA LIGNE PARIS" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].CaseLine__c</stringProp>
            <stringProp name="EXPECTED_VALUE">BTQ La Ligne Paris</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="12 - ENABLON CASES CREATION - ALL COUNTRIES" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2069899063">PersonMobilePhone</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="438494510">
              <stringProp name="-1986368485">+331${__Random(10000000,99999999,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200 - CCC_CASE MANAGMENT - ENABLON ALL COUNTRIES : ACCOUNT CREATION - FR" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;FirstName&quot;: &quot;FIRST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1201 - CCC_CASE MANAGMENT - ENABLON ALL COUNTRIES : GET CONTACT ID" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1202 - CCC_CASE MANAGMENT - ENABLON ALL COUNTRIES : CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CPVAnalysisExpected__c&quot;: &quot;Yes&quot;,&#xd;
            &quot;CVquestionnairecompletionstatus__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;Sav&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;Réglementaire&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;ChannelUsedToSendQuestionnaire__c&quot;: &quot;Do not know&quot;,&#xd;
            &quot;Coheris_Id__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: &quot;AUTOMATION TEST ENABLON - AGENT&quot;,&#xd;
            &quot;CommentProduct__c&quot;: null,&#xd;
            &quot;CommentsAboutProductReceived__c&quot;: null,&#xd;
            &quot;Commercial_Decision__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;ContentEnablonEmails__c&quot;: &quot;&quot;,&#xd;
            &quot;DateCVQuestionnaireSentToClient__c&quot;: null,&#xd;
            &quot;DateClientSentBackCVQuestionnaire__c&quot;: null,&#xd;
            &quot;DateProductIsReceived__c&quot;: null,&#xd;
            &quot;DateReceivedEmailFromEnablon__c&quot;: null,&#xd;
            &quot;Description&quot;: null,&#xd;
            &quot;Division__c&quot;: &quot;Fragrance Makeup Skincare&quot;,&#xd;
            &quot;EinsteinGPTIssue__c&quot;: null,&#xd;
            &quot;EinsteinGPTResolution__c&quot;: null,&#xd;
            &quot;EinsteinGPTSummary__c&quot;: null,&#xd;
            &quot;IDequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Language&quot;: &quot;fr&quot;,&#xd;
            &quot;MasterCaseDateTime__c&quot;: null,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Nameofbuyer__c&quot;: null,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Outbound_Caller_ID__c&quot;: null,&#xd;
            &quot;OwnerId&quot;: &quot;0057R00000AkMyjQAF&quot;,&#xd;
            &quot;ParentId&quot;: null,&#xd;
            &quot;Priority&quot;: &quot;Medium&quot;,&#xd;
            &quot;Product_Return__c&quot;: &quot;Received locally&quot;,&#xd;
            &quot;RecordTypeId&quot;: &quot;0127R000000BQjpQAG&quot;,&#xd;
            &quot;Reopened__c&quot;: false,&#xd;
            &quot;ResultsOfAnalysis__c&quot;: null,&#xd;
            &quot;Status&quot;: &quot;New&quot;,&#xd;
            &quot;StoreACET__c&quot;: null,&#xd;
            &quot;Subject&quot;: null,&#xd;
            &quot;SuppliedEmail&quot;: null,&#xd;
            &quot;SuppliedPhone&quot;: null,&#xd;
            &quot;URLequestionnaireEvereport__c&quot;: null,&#xd;
            &quot;Under16Y__c&quot;: null,&#xd;
            &quot;Voice_Call__c&quot;: null,&#xd;
            &quot;WebCity__c&quot;: null,&#xd;
            &quot;WebFirstName__c&quot;: null,&#xd;
            &quot;WebLastName__c&quot;: null,&#xd;
            &quot;WebLocation__c&quot;: null,&#xd;
            &quot;WebPostalCode__c&quot;: null,&#xd;
            &quot;Web_Title__c&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="13 - CASE AUTOMATIC CLOSURE - 15 DAYS OF CUSTOMER STATUS" enabled="false">
        <intProp name="ThreadGroup.num_threads">64</intProp>
        <intProp name="ThreadGroup.ramp_time">900</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="GLOBAL Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="84303">URL</stringProp>
            <stringProp name="953725811">API_VERSION</stringProp>
            <stringProp name="534302356">LAST_NAME</stringProp>
            <stringProp name="353659610">FIRST_NAME</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="560696049">
              <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              <stringProp name="1656316">60.0</stringProp>
              <stringProp name="2024547813">${Country} : ${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
              <stringProp name="2024547813">${Country} : ${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV_COUNTRIES" enabled="true">
          <stringProp name="filename">C:/Users/VO2GROUP/Chanel/Projets/jmeter/salve.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">CR1, CR2</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">;</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${__threadNum} - CASE AUTOMATIC CLOSURE  : ${CR1} -- ${CR2} --- ACCOUNT CREATION " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Account</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
           &quot;BA_Store_UID__pc&quot;: null,&#xd;
            &quot;BelongsToLaCollection__c&quot;: false,&#xd;
            &quot;FA_Store_UID__pc&quot;: null,&#xd;
            &quot;IsShadowAccount__c&quot;: false,&#xd;
            &quot;Is_Reachable_Email__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Messaging__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Phoning__pc&quot;: false,&#xd;
            &quot;Is_Reachable_Print__pc&quot;: false,&#xd;
            &quot;Is_Reachable_SMS__pc&quot;: false,&#xd;
            &quot;Is_Reachable__pc&quot;: false,&#xd;
            &quot;LaCollection_MarketId__c&quot;: null,&#xd;
            &quot;Language__c&quot;: &quot;aa&quot;,&#xd;
            &quot;LastName&quot;: &quot;LAST_NAME : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
            &quot;LocationOfResidence__c&quot;: &quot;FR&quot;,&#xd;
            &quot;MiddleName&quot;: null,&#xd;
            &quot;OptInDigital__c&quot;: false,&#xd;
            &quot;OptinWalletLaCollection__pc&quot;: false,&#xd;
            &quot;Optin_Email__pc&quot;: false,&#xd;
            &quot;Optin_Messaging__pc&quot;: false,&#xd;
            &quot;Optin_Phone__pc&quot;: false,&#xd;
            &quot;Optin_Postal__pc&quot;: false,&#xd;
            &quot;Optin_Sms__pc&quot;: false,&#xd;
            &quot;Parallel__c&quot;: false,&#xd;
            &quot;PersonBirthdate&quot;: null,&#xd;
            &quot;PersonEmail&quot;: &quot;AUTOMATISATION_JMETER${__Random(1000000,9999999,)}@JMETER.COM&quot;,&#xd;
            &quot;PersonHomePhone&quot;: null,&#xd;
            &quot;PersonMailingCity&quot;: &quot;Paris&quot;,&#xd;
            &quot;PersonMailingCountryCode&quot;: &quot;FR&quot;,&#xd;
            &quot;PersonMailingPostalCode&quot;: &quot;75001&quot;,&#xd;
            &quot;PersonMailingStateCode&quot;: null,&#xd;
            &quot;PersonMailingStreet&quot;: &quot;12 Rue de Richelieu&quot;,&#xd;
            &quot;PersonMobilePhone&quot;: &quot;${PersonMobilePhone}&quot;,&#xd;
            &quot;Profile__c&quot;: &quot;Prospect&quot;,&#xd;
            &quot;SA_Store_UID__pc&quot;: null,&#xd;
            &quot;Salutation&quot;: &quot;titlemister&quot;,&#xd;
            &quot;Star_Id__pc&quot;: null,&#xd;
            &quot;StopAllMedias__c&quot;: false,&#xd;
            &quot;Suffix&quot;: null,&#xd;
            &quot;Suspect__c&quot;: false,&#xd;
            &quot;isOneCustomer__c&quot;: false,&#xd;
            &quot;RecordTypeId&quot;: &quot;0122X000000KhZTQA0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idAccount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idAccount</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${__threadNum} - CASE AUTOMATIC CLOSURE  : ${CR1} -- ${CR2} --- GET CONTACT ID " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT PersonContactId FROM Account Where Id =&apos;${idAccount}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PersonContactId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">PersonContactId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonContactId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${__threadNum} - CASE AUTOMATIC CLOSURE  : ${CR1} -- ${CR2} --- CASE CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
          &quot;ArticleKnowledge__c&quot;: null,&#xd;
            &quot;CCC_BDDSQ__c&quot;: null,&#xd;
            &quot;CCC_Category_Product_Sub_Axe__c&quot;: null,&#xd;
            &quot;CaseLine__c&quot;: &quot;CCC - France&quot;,&#xd;
            &quot;CaseReasonCategory1__c&quot;: &quot;${CR1}&quot;,&#xd;
            &quot;CaseReasonSubCategory2__c&quot;: &quot;${CR2}&quot;,&#xd;
            &quot;CaseReasondetailsCategory3__c&quot;: null,&#xd;
            &quot;CategoryProduct__c&quot;: null,&#xd;
            &quot;CommentAdvisor__c&quot;: null,&#xd;
            &quot;ContactId&quot;: &quot;${PersonContactId}&quot;,&#xd;
            &quot;MasterCase__c&quot;: false,&#xd;
            &quot;Origin&quot;: &quot;Phone&quot;,&#xd;
            &quot;Status&quot;: &quot;Customer&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${__threadNum} - CASE AUTOMATIC CLOSURE  : ${CR1} -- ${CR2} --- PUT CASE  STATUS = CUSTOMER" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Case/${idCase}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
        &#xd;
            &quot;Status&quot;: &quot;Customer&quot;&#xd;
       &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">idCase</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${__threadNum} - CASE AUTOMATIC CLOSURE  : ${CR1} -- ${CR2} --- CLOSURE AFTER 15 DAYS IS OK ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= SELECT status FROM Case Where Id =&apos;${idCase}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="CASE CLOSED ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Closed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">150000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
